#include <bits/stdc++.h>
using namespace std;

const int N = 25;
int n;
pair<int, int> end_position, a[N], b[N];
vector<pair<long long, long long>> sum_a, sum_b;
long long sum_first, sum_second;

void ql(int i, int n, pair<int, int> a[N], vector<pair<long long, long long>> &g){
    if(i > n){
        g.push_back({sum_first, sum_second});
    }
    else {
        for(int j = 0; j <= 1; j++){
            if(j == 1)
                sum_first += a[i].first,
                sum_second += a[i].second;
            ql(i + 1, n, a, g);
            if(j == 1)
                sum_first -= a[i].first,
                sum_second -= a[i].second;
        }
    }
}

signed main(){
    cin.tie(0) -> sync_with_stdio(false);

    cin >> n >> end_position.first >> end_position.second;
    for(int i = 1; i <= n / 2; i++) cin >> a[i].first >> a[i].second;

    int m = n - n / 2;
    n /= 2;

    for(int i = 1; i <= m; i++) cin >> b[i].first >> b[i].second;

    ql(1, n, a, sum_a), ql(1, m, b, sum_b);

    sort(begin(sum_a), end(sum_a));
    sort(begin(sum_b), end(sum_b));

    long long ans = 0;
    for(pair<long long, long long> x : sum_b){
        pair<long long, long long> y = {end_position.first - x.first, end_position.second - x.second};
        ans += upper_bound(begin(sum_a), end(sum_a), y) - lower_bound(begin(sum_a), end(sum_a), y);
    }

    cout << ans;
    return 0;
}
